$(document).ready(function(){
  //Canvas stuff
  var canvas = $("#canvas")[0];
  var ctx = canvas.getContext("2d");
  var w = $("#canvas").width();
  var h = $("#canvas").height();

  //Lets save the cell width in a variable for easy control
  var cw = 10;
  var d;
  var coin_array = [];
  var coin_num = 40;
  var snake;
  var score;
  //Map
  var map =
  [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],
[1,1,0,0,0,1,1,1,1,2,2,2,2,2,2,2,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0],
[1,1,0,1,0,0,1,1,2,2,2,2,2,2,2,2,2,1,1,1,0,0,1,1,1,0,2,0,1,1,1,1,1,0,1,1,1,1,1,1,0],
[1,1,0,1,1,0,0,1,1,2,2,1,1,1,2,2,1,1,1,0,1,0,0,1,0,2,2,2,0,1,1,1,1,0,1,1,1,1,1,1,0],
[1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,0,2,1,1,0,0,2,2,2,2,2,0,1,1,1,0,1,1,1,1,1,1,0],
[1,1,0,2,2,1,1,0,0,1,1,1,2,1,1,0,1,0,2,2,2,1,1,0,0,2,2,2,2,2,0,1,1,0,1,1,1,1,1,1,0],
[1,1,0,2,2,2,1,1,0,0,1,2,2,2,2,1,0,2,2,2,2,2,1,1,0,0,2,2,2,2,2,0,1,0,1,1,1,1,1,1,0],
[1,1,0,1,2,2,2,1,1,0,0,1,2,2,2,0,1,0,2,2,2,2,2,1,1,0,0,2,2,2,2,2,0,0,1,1,1,1,1,1,0],
[1,1,0,1,1,2,2,2,1,1,0,0,1,2,2,2,2,1,0,2,2,2,2,2,1,1,0,0,2,2,2,1,1,0,1,1,1,1,1,1,0],
[1,1,0,1,2,2,2,1,1,1,1,0,0,1,2,2,2,0,1,0,2,2,2,2,2,1,1,0,0,2,1,1,1,1,0,1,1,1,1,1,0],
[1,1,0,1,2,2,1,1,1,1,1,1,0,0,1,2,0,1,2,1,0,2,2,2,1,1,1,1,0,0,1,1,2,2,1,0,0,0,0,0,0],
[1,1,0,1,1,1,1,2,1,1,1,1,1,0,0,0,1,2,2,2,1,0,2,1,1,1,1,1,1,0,0,2,2,2,2,1,1,1,1,1,0],
[1,1,0,1,1,1,2,2,2,1,1,1,1,1,0,0,2,2,2,2,2,1,0,1,1,2,2,1,1,1,0,0,2,2,2,2,2,2,2,1,0],
[1,1,0,2,2,2,2,2,1,1,1,1,1,1,0,0,0,1,2,2,2,1,1,0,1,2,2,2,1,1,1,0,0,1,2,2,2,2,2,1,0],
[1,1,0,2,2,2,2,1,1,2,1,1,1,0,1,1,0,0,1,2,1,1,0,1,0,1,2,2,2,1,1,1,0,0,2,2,2,2,2,1,0],
[1,1,0,2,2,2,1,1,2,2,2,2,0,1,1,1,1,0,0,1,1,0,1,1,1,0,1,2,2,2,1,1,1,0,2,2,2,2,2,1,0],
[1,1,0,2,2,1,1,2,2,2,2,0,1,2,1,1,1,1,0,0,0,1,1,1,0,1,0,1,2,2,1,1,1,0,0,1,1,1,1,1,0],
[1,1,0,1,1,1,1,1,2,2,0,1,2,2,2,1,1,1,1,0,0,1,1,0,1,1,1,0,1,1,1,2,1,1,0,0,1,1,1,1,0],
[1,1,0,1,1,1,1,1,1,0,1,1,2,2,2,1,1,1,0,1,1,0,0,1,1,1,0,1,0,2,2,2,1,1,1,0,0,1,1,1,0],
[1,1,0,1,1,1,1,1,1,0,1,2,2,2,1,1,1,0,1,1,1,0,0,1,1,0,1,1,0,2,2,2,2,1,1,1,0,0,1,1,0],
[1,1,0,0,0,0,0,0,0,0,1,1,2,1,1,1,1,0,1,1,0,1,1,0,0,1,1,2,1,0,2,2,2,2,1,1,1,0,0,1,0],
[1,1,0,1,1,1,1,1,1,1,0,1,1,1,2,1,1,0,1,0,1,1,1,0,1,1,2,2,2,1,0,2,2,2,2,1,1,1,0,0,0],
[1,1,0,2,2,2,2,1,1,1,1,0,1,2,2,2,1,1,0,0,1,1,0,1,1,2,2,2,2,2,1,0,2,2,2,2,1,1,1,0,0],
[2,2,0,2,2,2,1,1,1,1,1,1,0,1,2,2,2,1,1,0,0,0,1,1,2,2,2,2,2,2,2,0,2,2,1,1,1,1,1,1,0],
[2,2,0,2,2,2,1,1,1,1,1,0,2,1,2,2,2,2,1,1,0,1,1,2,2,2,2,2,2,2,0,0,1,1,1,2,2,1,1,1,0],
[2,2,0,2,2,2,1,1,1,1,0,2,2,2,1,1,2,1,0,0,0,1,1,2,2,2,2,2,0,0,1,0,1,1,2,2,2,1,1,1,0],
[2,2,0,2,2,2,1,1,0,0,2,2,2,2,2,0,0,0,1,1,0,1,1,1,1,1,2,0,1,1,1,0,2,2,2,2,2,2,1,1,0],
[2,2,0,2,2,2,1,1,0,2,2,2,2,2,0,1,1,1,1,1,0,2,2,2,2,1,0,1,2,2,2,0,2,2,2,2,2,1,1,1,0],
[2,2,0,2,2,2,1,1,0,2,2,2,2,0,1,1,1,1,1,1,0,2,2,2,2,1,0,2,2,2,2,0,2,2,2,2,2,2,1,1,0],
[2,2,0,1,1,1,1,1,0,2,2,2,0,1,1,1,1,2,2,1,0,2,2,2,2,1,0,2,2,2,2,0,2,2,2,2,2,2,1,1,0],
[1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,2,2,2,2,1,0,2,2,2,2,0,2,2,2,2,2,2,1,1,0],
[1,1,0,1,1,1,1,1,1,0,2,2,2,2,2,0,1,1,1,1,0,2,2,2,2,1,0,2,2,2,1,0,2,2,2,2,2,2,1,1,0],
[1,1,0,2,2,1,1,1,1,0,2,2,2,2,2,0,0,0,0,0,0,2,2,2,2,1,0,1,1,1,1,0,2,2,2,2,2,2,1,1,0],
[1,1,0,2,2,2,1,1,1,0,1,2,1,1,0,1,1,1,1,1,0,2,2,2,2,1,0,1,1,1,1,0,1,1,1,2,2,2,1,1,0],
[1,1,0,2,2,2,1,1,1,0,2,2,2,2,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[1,1,0,2,2,1,1,1,1,0,2,2,2,2,0,2,2,2,2,1,0,2,2,2,2,2,2,0,2,2,2,2,2,2,2,0,1,2,2,1,0],
[1,1,0,1,1,1,1,2,1,0,2,2,2,2,0,2,2,2,2,1,0,2,2,2,2,2,2,0,2,2,2,2,2,2,2,0,2,2,2,1,0],
[1,1,0,1,1,1,2,2,1,0,2,2,2,2,0,2,2,2,2,1,0,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,2,2,1,0],
[1,1,0,1,1,1,2,2,1,0,2,2,2,2,0,1,1,1,1,1,0,2,2,2,2,2,2,0,2,2,2,2,2,2,2,1,2,2,2,1,0],
[1,1,0,1,1,1,2,2,1,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,0,2,2,2,2,2,2,2,1,2,2,2,1,0],
[1,1,0,0,0,0,2,2,1,0,2,2,1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0],
[1,1,0,2,2,0,0,0,0,0,2,2,1,0,1,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,2,2,0],
[1,1,0,2,2,2,2,2,1,0,2,2,1,0,0,1,1,1,1,1,0,1,1,1,1,2,2,1,1,0,1,1,0,1,1,0,0,1,2,2,0],
[1,1,0,2,2,2,2,2,1,0,2,2,1,0,1,1,1,1,1,1,0,1,2,2,2,2,2,1,1,1,0,0,1,1,2,2,2,1,2,1,0],
[1,1,0,2,2,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,2,2,2,2,2,1,1,2,2,2,0,1,2,2,2,1,2,2,0],
[1,1,0,2,2,1,1,1,1,0,2,2,1,0,1,1,1,1,1,1,0,1,2,2,2,2,2,2,2,2,2,2,1,0,2,2,2,1,2,2,0],
[1,1,0,0,0,0,0,1,1,0,2,2,1,0,1,1,1,1,1,1,0,1,2,2,2,2,2,2,2,2,2,2,1,0,2,2,2,1,2,2,0],
[1,1,0,0,0,0,0,1,1,0,2,2,1,0,1,1,1,1,1,1,0,1,2,2,2,2,2,2,2,2,2,2,1,0,2,2,2,1,2,2,0],
[1,1,0,2,2,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,0],
[1,1,0,2,2,1,0,1,1,0,2,2,1,0,1,1,1,1,1,1,0,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,1,0],
[1,1,0,2,2,1,0,0,0,0,2,2,1,0,1,1,1,1,1,1,0,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,0],
[1,1,0,2,2,1,1,1,1,1,2,2,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,0],
[1,1,0,2,2,1,1,1,2,2,2,2,1,0,1,1,1,1,1,1,0,1,1,1,1,1,2,2,1,1,1,1,1,0,1,1,1,1,1,1,0],
[1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]];

  function init()
  {
    d = "right"; //default direction
    create_snake();
    create_coin(); //Now we can see the food particle
    //finally lets display the score
    score = 0;

    //Lets move the snake now using a timer which will trigger the paint function
    //every 60ms
    if(typeof game_loop != "undefined") clearInterval(game_loop);
    game_loop = setInterval(paint, 60);
  }
  init();

  function create_snake()
  {
    var length = 1; //Length of the snake
    snake = {x: 1, y: 1}; //Empty array to start with
  }

  //Lets create the food now
  function create_coin()
  {
    var i = 0;
    // Put 40 coins in total
    while (true) {
        var xtem = Math.round(Math.random()*(w-cw)/cw);
        var ytem = Math.round(Math.random()*(h-cw)/cw);
        if (map[ytem][xtem] != 2) {
          coin_array[i] = {
            x: xtem,
            y: ytem,
          };
          i++;
        }
        if (i == coin_num) break;
    }
    //This will create a cell with x/y between 0-44
    //Because there are 45(450/10) positions accross the rows and columns
  }

  //Lets paint the snake now
  function paint()
  {
    //To avoid the snake trail we need to paint the BG on every frame
    //Lets paint the canvas now
    ctx.fillStyle = "white";
    ctx.fillRect(0, 0, w, h);
    ctx.strokeStyle = "black";
    ctx.strokeRect(0, 0, w, h);

    //Create the map
    for (var i = 0; i<map.length; i++) {
      for (var j = 0; j < map[i].length; j++) {
        // Draw map
        if (map[i][j] == 0) {
          ctx.fillStyle = "rgb(220,220,220)";
          ctx.fillRect(j*cw, i*cw, cw, cw);
        } else if (map[i][j] == 1) {
          ctx.fillStyle = "rgb(60,179,113)";
          ctx.fillRect(j*cw, i*cw, cw, cw);
        } else if (map[i][j] == 2) {
          ctx.fillStyle = "rgb(160,82,45)";
          ctx.fillRect(j*cw, i*cw, cw, cw);
        }
      }
    }

    //Paint the eater
    paint_cell(snake.x, snake.y, "black");

    //Paint the coin
    for(var x = 0; x < coin_num; x++) {
        paint_cell(coin_array[x].x, coin_array[x].y, "gold");
    }



    //Lets add the game over clauses now
    //This will restart the game if the snake hits the wall
    //Lets add the code for body collision
    //Now if the head of the snake bumps into its body, the game will restart
    // if(nx == -1 || nx == w/cw || ny == -1 || ny == h/cw || check_collision(nx, ny, snake_array))
    // {
    //   //restart game
    //   init();
    //   //Lets organize the code a bit now.
    //   return;
    // }

    //Lets write the code to make the snake eat the food
    //The logic is simple
    //If the new head position matches with that of the food,
    //Create a new head instead of moving the tail
    // if(nx == food.x && ny == food.y)
    // {
    //   var tail = {x: nx, y: ny};
    //   score++;
    //   //Create new food
    //   create_food();
    // }
    // else
    // {
    //   var tail = snake_array.pop(); //pops out the last cell
    //   tail.x = nx; tail.y = ny;
    // }
    // //The snake can now eat the food.

    // snake_array.unshift(tail); //puts back the tail as the first cell

    // for(var i = 0; i < snake_array.length; i++)
    // {
    //   var c = snake_array[i];
    //   //Lets paint 10px wide cells
    //   paint_cell(c.x, c.y);
    // }


    //Lets paint the score
    var score_text = "Score: " + score;
    ctx.fillText(score_text, 5, h-5);
  }

  //Lets first create a generic function to paint cells
  function paint_cell(x, y, color)
  {
    ctx.fillStyle = color;
    ctx.fillRect(x*cw, y*cw, cw, cw);
    ctx.strokeStyle = "white";
    ctx.strokeRect(x*cw, y*cw, cw, cw);
  }

  //Lets add the keyboard controls now
  $(document).keydown(function(e){
    var key = e.which;
    //We will add another clause to prevent reverse gear
    if(key == "37")      snake.x--; //Left
    else if(key == "38") snake.y--; //Up
    else if(key == "39") snake.x++; //Right
    else if(key == "40") snake.y++; //Down
    //The snake is now keyboard controllable
  })

})
